==10686== Cachegrind, a cache and branch-prediction profiler
==10686== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
==10686== Using Valgrind-3.18.1-42b08ed5bd-20211015 and LibVEX; rerun with -h for copyright info
==10686== Command: ./lf-server
==10686== 
--10686-- Valgrind options:
--10686--    --tool=cachegrind
--10686--    -v
--10686--    --error-exitcode=99
--10686-- Contents of /proc/version:
--10686--   Linux version 6.8.0-45-generic (buildd@lcy02-amd64-075) (x86_64-linux-gnu-gcc-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0, GNU ld (GNU Binutils for Ubuntu) 2.38) #45~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Wed Sep 11 15:25:05 UTC 2
--10686-- 
--10686-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3
--10686-- Page sizes: currently 4096, max supported 4096
--10686-- Valgrind library directory: /usr/libexec/valgrind
--10686-- warning: L3 cache found, using its data for the LL simulation.
==10686== Cache configuration used:
==10686==   I1: 32,768 B, 8-way, 64 B lines
==10686==   D1: 49,152 B, 12-way, 64 B lines
==10686==   LL: 6,291,456 B, 12-way, 64 B lines
--10686-- Reading syms from /home/ido/Course-OperationSystems/OS-FinalProject/lf-server
--10686-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
--10686--   Considering /usr/lib/debug/.build-id/41/86944c50f8a32b47d74931e3f512b811813b64.debug ..
--10686--   .. build-id is valid
--10686-- Reading syms from /usr/libexec/valgrind/cachegrind-amd64-linux
--10686--    object doesn't have a symbol table
--10686--    object doesn't have a dynamic symbol table
--10686-- Scheduler: using generic scheduler lock implementation.
==10686== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-10686-by-ido-on-???
==10686== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-10686-by-ido-on-???
==10686== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-10686-by-ido-on-???
==10686== 
==10686== TO CONTROL THIS PROCESS USING vgdb (which you probably
==10686== don't want to do, unless you know exactly what you're doing,
==10686== or are doing some strange experiment):
==10686==   /usr/bin/vgdb --pid=10686 ...command...
==10686== 
==10686== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==10686==   /path/to/gdb ./lf-server
==10686== and then give GDB the following command
==10686==   target remote | /usr/bin/vgdb --pid=10686
==10686== --pid is optional if only one valgrind process is running
==10686== 
--10686-- Reading syms from /usr/libexec/valgrind/vgpreload_core-amd64-linux.so
--10686--    object doesn't have a symbol table
--10686-- Reading syms from /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30
--10686--    object doesn't have a symbol table
--10686-- Reading syms from /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
--10686--    object doesn't have a symbol table
--10686-- Reading syms from /usr/lib/x86_64-linux-gnu/libc.so.6
--10686--   Considering /usr/lib/debug/.build-id/49/0fef8403240c91833978d494d39e537409b92e.debug ..
--10686--   .. build-id is valid
--10686-- Reading syms from /usr/lib/x86_64-linux-gnu/libm.so.6
--10686--   Considering /usr/lib/debug/.build-id/a5/08ec5d8bf12fb7fd08204e0f87518e5cd0b102.debug ..
--10686--   .. build-id is valid
LF- waiting for connections...
LF-server new connection from 127.0.0.1 on socket 4
Action received: newgraph tokens size: 3
Action received: newgraph 3 2
 from client 4
Creating a new graph with 3 vertices and 2 edges
Graph created successfully
Action received: mst tokens size: 2
Action received: mst from client 4
Action received: newgraph tokens size: 3
Action received: newgraph 1 0
 from client 4
Creating a new graph with 1 vertices and 0 edges
Graph created successfully
Action received: mst tokens size: 2
Action received: mst from client 4
Action received: newgraph tokens size: 3
Not a number
Action received: newgraph 2 -
 from client 4
Client 4 sent a message: newgraph 2 -

Action received: newgraph tokens size: 3
Action received: newgraph 2 0
 from client 4
Creating a new graph with 2 vertices and 0 edges
Graph created successfully
Action received: newedge tokens size: 4
Action received: newedge 1 2 5
 from client 4
Adding an edge from 1 to 2
LF-server: socket 4 hung up

LF-server: cleaning up resources...
LF-server: Graphs freed,
LF-server: Clients freed,
Good Bye!
==10686== 
==10686== I   refs:      3,671,547
==10686== I1  misses:       16,156
==10686== LLi misses:        5,423
==10686== I1  miss rate:      0.44%
==10686== LLi miss rate:      0.15%
==10686== 
==10686== D   refs:      1,469,611  (965,451 rd   + 504,160 wr)
==10686== D1  misses:       17,585  ( 14,329 rd   +   3,256 wr)
==10686== LLd misses:       10,630  (  8,288 rd   +   2,342 wr)
==10686== D1  miss rate:       1.2% (    1.5%     +     0.6%  )
==10686== LLd miss rate:       0.7% (    0.9%     +     0.5%  )
==10686== 
==10686== LL refs:          33,741  ( 30,485 rd   +   3,256 wr)
==10686== LL misses:        16,053  ( 13,711 rd   +   2,342 wr)
==10686== LL miss rate:        0.3% (    0.3%     +     0.5%  )
