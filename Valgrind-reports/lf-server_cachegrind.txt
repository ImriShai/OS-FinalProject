==24420== Cachegrind, a cache and branch-prediction profiler
==24420== Copyright (C) 2002-2017, and GNU GPL'd, by Nicholas Nethercote et al.
==24420== Using Valgrind-3.18.1-42b08ed5bd-20211015 and LibVEX; rerun with -h for copyright info
==24420== Command: ./lf-server
==24420== 
--24420-- Valgrind options:
--24420--    --tool=cachegrind
--24420--    -v
--24420--    --error-exitcode=99
--24420-- Contents of /proc/version:
--24420--   Linux version 6.8.0-45-generic (buildd@lcy02-amd64-075) (x86_64-linux-gnu-gcc-12 (Ubuntu 12.3.0-1ubuntu1~22.04) 12.3.0, GNU ld (GNU Binutils for Ubuntu) 2.38) #45~22.04.1-Ubuntu SMP PREEMPT_DYNAMIC Wed Sep 11 15:25:05 UTC 2
--24420-- 
--24420-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3
--24420-- Page sizes: currently 4096, max supported 4096
--24420-- Valgrind library directory: /usr/libexec/valgrind
--24420-- warning: L3 cache found, using its data for the LL simulation.
==24420== Cache configuration used:
==24420==   I1: 32,768 B, 8-way, 64 B lines
==24420==   D1: 49,152 B, 12-way, 64 B lines
==24420==   LL: 6,291,456 B, 12-way, 64 B lines
--24420-- Reading syms from /home/ido/Course-OperationSystems/OS-FinalProject/lf-server
--24420-- Reading syms from /usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2
--24420--   Considering /usr/lib/debug/.build-id/41/86944c50f8a32b47d74931e3f512b811813b64.debug ..
--24420--   .. build-id is valid
--24420-- Reading syms from /usr/libexec/valgrind/cachegrind-amd64-linux
--24420--    object doesn't have a symbol table
--24420--    object doesn't have a dynamic symbol table
--24420-- Scheduler: using generic scheduler lock implementation.
==24420== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-24420-by-ido-on-???
==24420== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-24420-by-ido-on-???
==24420== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-24420-by-ido-on-???
==24420== 
==24420== TO CONTROL THIS PROCESS USING vgdb (which you probably
==24420== don't want to do, unless you know exactly what you're doing,
==24420== or are doing some strange experiment):
==24420==   /usr/bin/vgdb --pid=24420 ...command...
==24420== 
==24420== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==24420==   /path/to/gdb ./lf-server
==24420== and then give GDB the following command
==24420==   target remote | /usr/bin/vgdb --pid=24420
==24420== --pid is optional if only one valgrind process is running
==24420== 
--24420-- Reading syms from /usr/libexec/valgrind/vgpreload_core-amd64-linux.so
--24420--    object doesn't have a symbol table
--24420-- Reading syms from /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30
--24420--    object doesn't have a symbol table
--24420-- Reading syms from /usr/lib/x86_64-linux-gnu/libgcc_s.so.1
--24420--    object doesn't have a symbol table
--24420-- Reading syms from /usr/lib/x86_64-linux-gnu/libc.so.6
--24420--   Considering /usr/lib/debug/.build-id/49/0fef8403240c91833978d494d39e537409b92e.debug ..
--24420--   .. build-id is valid
--24420-- Reading syms from /usr/lib/x86_64-linux-gnu/libm.so.6
--24420--   Considering /usr/lib/debug/.build-id/a5/08ec5d8bf12fb7fd08204e0f87518e5cd0b102.debug ..
--24420--   .. build-id is valid
LF- waiting for connections...
LF-server new connection from 127.0.0.1 on socket 4
Action received: newgraph 1 0
 from client 4
Creating a new graph with 1 vertices and 0 edges
Graph created successfully
Action received: mst from client 4
LF-server: socket 4 hung up

LF-server: cleaning up resources...
LF-server: Graphs freed,
LF-server: Clients freed,
Good Bye!
==24420== 
==24420== I   refs:      2,694,117
==24420== I1  misses:        8,022
==24420== LLi misses:        4,861
==24420== I1  miss rate:      0.30%
==24420== LLi miss rate:      0.18%
==24420== 
==24420== D   refs:        918,497  (659,062 rd   + 259,435 wr)
==24420== D1  misses:       16,910  ( 14,015 rd   +   2,895 wr)
==24420== LLd misses:       10,283  (  8,268 rd   +   2,015 wr)
==24420== D1  miss rate:       1.8% (    2.1%     +     1.1%  )
==24420== LLd miss rate:       1.1% (    1.3%     +     0.8%  )
==24420== 
==24420== LL refs:          24,932  ( 22,037 rd   +   2,895 wr)
==24420== LL misses:        15,144  ( 13,129 rd   +   2,015 wr)
==24420== LL miss rate:        0.4% (    0.4%     +     0.8%  )



